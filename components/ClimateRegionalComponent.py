# This file was automatically generated by converter.py.
# Think long and hard before attempting to modify it.

import math
from components.helpers import *
from components._patches import *


class IClimateRegionalState(Parameters):
    inputtemp = IParameter1Dimensional(
        'inputtemp',
        ['Timestep'],
        'Double',
        None)
    bregtmp = IParameter1Dimensional('bregtmp', ['Region'], 'Double', None)
    bregstmp = IParameter1Dimensional('bregstmp', ['Region'], 'Double', None)
    scentemp = IParameter2Dimensional(
        'scentemp', [
            'Timestep', 'Region'], 'Double', None)
    temp = IVariable2Dimensional(
        'temp', [
            'Timestep', 'Region'], 'Double', None)
    regtmp = IVariable2Dimensional(
        'regtmp', [
            'Timestep', 'Region'], 'Double', None)
    regstmp = IVariable2Dimensional(
        'regstmp', [
            'Timestep', 'Region'], 'Double', None)

    options = [inputtemp, bregtmp, bregstmp, scentemp, temp, regtmp, regstmp]


class ClimateRegionalComponent(Behaviors):
    state_class = IClimateRegionalState

    def run(self, state, clock, dimensions):

        s = (state)
        t = (clock.Current)

        for r in dimensions.GetValuesOfRegion():

            s.regtmp[t, r] = (s.inputtemp[t] * s.bregtmp[r] + s.scentemp[t, r])

        for r in dimensions.GetValuesOfRegion():

            s.temp[t, r] = (s.regtmp[t, r] / s.bregtmp[r])

        for r in dimensions.GetValuesOfRegion():

            s.regstmp[
                t,
                r] = (
                s.inputtemp[t] *
                s.bregstmp[r] +
                s.scentemp[
                    t,
                    r])


behavior_classes = [ClimateRegionalComponent]
